Vetor pista[][2] (-1 no segundo cara, caso não haja)
Vetor de ordenação da equipe
Vetor de ciclistas
Ciclistas da equipe A são labelados em [0,n-1]
Ciclistas da equipe B são labelados em [n, 2n-1]
Na largada, os ciclistas começam enfileirados da forma
A equipe A começa enfileirada com o primeiro no 0 (o resto atrás, na volta anterior)
A equipe B começa enfileirada com o primeiro em d/2 (o resto atrás, na volta anterior)
Ciclistas precisam guardar o ponto de partida
Ciclistas guardam a posição relativa entre sua própria equipe
Ciclistas guardam a posição absoluta
Ciclistas guardam se estão no meio do metro (?)

typedef struct {
    int id; /* equipe implicita */
    int chegada;
    int volta;
    int pos;
    int pos_eq;
    int meio;
    int vel;
    int quebrado; /*guarda a volta que quebrou, -1 se nao quebrou */
} atleta;
typedef atleta *Atleta;

TODO: Resolver problema do sorteio das velocidades
ASSUMIMOS: Pode sortear 30/60 independente de qualquer coisa

PARALELISMO

Semáforo pra pista[][]
Sincronização no final de cada iteração
Semáforo para quebrar

Problemas

Muito rapido a seed e igual, entao todo mundo com a mesma velocidade; 
